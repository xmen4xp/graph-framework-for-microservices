---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: light-controller 
  namespace: {{ default  .Release.Namespace .Values.namespace }}
  labels:
    app: light-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: light-controller 
  template:
    metadata:
      labels:
        app: light-controller 
    spec:
      {{- if eq .Values.global.tainted true }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: traffic-light 
                operator: In
                values:
                - controller 
      tolerations:
      - key: traffic-light 
        operator: Equal
        value: controller 
      {{- end }}
      containers:
      - name: light-controller 
{{- if ne .Values.imageRegistry "" }}
        image: "{{.Values.imageRegistry}}/traffic-light:{{ .Values.imageTag }}"
{{- else }}
        image: "traffic-light:{{ .Values.imageTag }}"
{{- end }}
        command:
        - /bin/light-controller 
        - -k
        - /etc/config/kubeconfig/kubeconfig 
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "500m"
        env:
        - name: KUBECONFIG
          value: /etc/config/kubeconfig/kubeconfig
        - name: LOG_LEVEL
          value: DEBUG
        volumeMounts:
        - name: nexus-k8s-apiserver-kubeconfig
          mountPath: "/etc/config/kubeconfig"
          readOnly: true
      restartPolicy: Always
      securityContext: {}
      volumes:
      - name: nexus-k8s-apiserver-kubeconfig
        secret:
            secretName: nexus-k8s-apiserver-kubeconfig
